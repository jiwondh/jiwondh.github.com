---

layout: post
title: "연습"
date: 2017-06-21
categories:

- Node.js

description: session
image: /assets/images/ade1.jpg
image-sm: /assets/images/ade2.jpg

---

{:.no_toc}

* Will be replaced with the ToC, excluding the "Contents" header
{:toc}


# 11장. 소켓 입출력 모델

### ⭐️ 학습 목표

- Overlapped 소켓 입출력 모델의 두 가지 형태를 이해하고 활용한다.
- Completion Port 소켓 입출력 모델을 이해하고 활용한다.

## 01. Overlapped 모델(I) 📌

- Overlapped모델은 10장에서 배운 소켓 입출력 모델(Select, WSAAsyncSelect, WSAEventSelect)과는 근본적으로 다른 **입출력 방식** 으로 **고성능** 을 제공
- 크게 2종류의 구현 방법을 지원


### ⭐️ 학습 목표

- Overlapped 소켓 입출력 모델의 두 가지 형태를 이해하고 활용한다.
- 안녕
- [그림 11-1] 동기 입출력
  ![D40F6240-BA26-4FFD-9F29-EFAFFFDFF359](https://ws4.sinaimg.cn/large/006tKfTcgy1fgoq1nqngdj30u80f441x.jpg)
- [그림 11-2] 비동기 입출력
  ![9A2614F0-5DD6-4FE5-9FAA-33FBA70595C0](https://ws2.sinaimg.cn/large/006tKfTcgy1fgoq2dve5ej30so0e6wi1.jpg)



### ⭐️ 비동기 입출력 (Asynchronous I/O)

- **중첩 입출력(overlapped I/O)** 라고도 부름
- 응용 프로그램은 입출력 함수를 호출한 후 입출력 작업의 완료 여부와 무관하게 다른 작업을 진행할 수 있음
- 입출력 작업이 끝나면 운영체제는 작업 완료를 응용 프로그램에 알려줌
- 이때 응용 프로그램은 하던 작업ㅇ르 중단하고 입출력 결과를 처리하면 됨
- 앞으로 배울 소켓 입출력 모델(Overlapped, Completion Port)은 모두 비동기 입출력 방식으로 소켓 입출력을 처리
- 비동기 입출력 방식에서는 <u>입출력 완료를 운영체제가 알려준다는 개념</u>이 반드시 필요하므로 **비동기 통지** 도 사용한다고 볼 수 있음
- **11장에서 배울 소켓 입출력 모델(Overlapped, Completion Prot)은 비동기 입출력과 비동기 통지를 결합한 형태**

### ⭐️ 입출력 방식에 따른 소켓 입출력 모델 분류

- 동기 입출력 + 비동기 통지
  - Select 모델
  - WSAAsyncSelect모델
  - WSAEventSelect모델
- 비동기 입출력 + 비동기 통지
  - Overlapped 모델
  - Completion Port 모델

### ⭐️ Overlapped 모델 사용 절차

① 비동기 입출력을 지원하는 소켓 생성

② 비동기 입출력을 지원하는 소켓 함수 호출

{% highlight cpp %}
#include <iostream>

// Hello World
int main()
{
    cout << "hello world" << endl;
    int a = 10;
}
{% endhighlight %}

{% highlight html %}
<html>

{% endhighlight %}

③ <u>운영체제가 입출력 작업 완료를 응용 프로그램에 알려주면(=비동기 통지)</u>, 응용 프로그램은 입출력 결과를 처리

### ⭐️ Overlapped 모델의 종류

- 운영체제의 **비동기 통지** 방식에 따라 두 종류로 구분

| 종류                | 설명                                       |
| ----------------- | ---------------------------------------- |
| Overlapped 모델(I)  | 소켓  입출력 작업이 완료되면 운영체제는 응용 프로그램이 등록해둔 이벤트 객체를 신호  상태로 바꾼다. 응용 프로그램은 이벤트 객체를 관찰함으로써 입출력 작업 완료를 감지할 수 있다. |
| Overlapped 모델(II) | 소켓  입출력 작업이 완료되면 운영체제는 응용 프로그램이 등록해둔 함수를 자동으로 호출한다.  일반적으로 운영체제가 호출하는 응용 프로그램 함수를 콜백 함수라 하는데 특별히 Overlapped 모델에서는 완료 루틴이라 부른다. |

### ⭐️ 입출력 함수

- 소켓 응용 프로그램에서 Overlapped모델을 사용하는 주된 이유는 데이터를 보내고 받는 작업ㅇ르 효율적으로 처리하기 위해서임
- `WSASend)()`, `WSARecv()` 함수는 네 번째와 다섯 번째 인자를 제외하면 같음

```
int WSASend (
   SOCKET s,
   LPWSABUF lpBuffers,
   DWORD dwBufferCount,
   LPDWORD lpNumberOfBytesSent,
   DWORD dwFlags,
   LPWSAOVERLAPPED lpOverlapped,
   LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
) ;
// 성공: 0, 실패: SOCKET_ERROR
```
