---
layout: post
title: "Node.js에서 Mysql 주요 쿼리문 이용하기"
date: 2017-01-14
categories:
  - Node.js
description: SELECT, INSERT, UPDATE, DELETE
image: /assets/images/ade1.jpg
image-sm: /assets/images/ade2.jpg
---

Node.js에서의 Mysql의 자세한 사용법은 [github 페이지](https://github.com/mysqljs/mysql)를 참고하세요.

## SELECT

{% highlight sql linenos=table %}
var sql = 'SELECT * FROM table';
conn.query(sql, function(err, rows, fields){
	if(err){
		console.log(err);
	} else {
		for(var i=0; i<rows.length; i++){
			console.log(rows[i].name);
		}
	}
});
{% endhighlight %}


## INSERT

{% highlight sql linenos=table %}
var sql = 'INSERT INTO table (name, email, age) VALUES(?, ?, ?)';
var params = ['Jiwon', 'jiwon@mail.com', '23'];
conn.query(sql, params, function(err, rows, fields){
	if(err){
		console.log(err);
	} else {
		console.log(rows.insertId);
	}
});
{% endhighlight %}

## UPDATE

{% highlight sql linenos=table %}
var sql = 'UPDATE table SET name=?, age=? WHERE id=?';
var params = ['Eunji', '25', 1];
conn.query(sql, params, function(err, rows, fields){
	if(err){
		console.log(err);
	} else {
		console.log(rows);
	}
});
{% endhighlight %}

## DELETE
{% highlight sql linenos=table %}
var sql = 'DELETE FROM topic WHERE id=?';
var params = [1];
conn.query(sql, params, function(err, rows, fields){
	if(err){
		console.log(err);
	} else {
		console.log(rows);
	}
});
{% endhighlight %}

